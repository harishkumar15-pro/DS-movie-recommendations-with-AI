# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rMsdomyB7fWUm9j5hmSjAlXvkee09_bn
"""

import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

# Step 1: Sample movie data
data = {
    'movieId': [1, 2, 3, 4, 5],
    'title': ['The Matrix', 'John Wick', 'Interstellar', 'Inception', 'The Prestige'],
    'description': [
        'A hacker discovers reality is a simulation',
        'A retired hitman seeks vengeance',
        'Explorers travel through a wormhole in space',
        'A thief enters peopleâ€™s dreams to steal secrets',
        'Two magicians compete in early 20th century London'
    ]
}
df = pd.DataFrame(data)

# Step 2: Create TF-IDF matrix from descriptions
tfidf = TfidfVectorizer(stop_words='english')
tfidf_matrix = tfidf.fit_transform(df['description'])

# Step 3: Compute cosine similarity
cosine_sim = cosine_similarity(tfidf_matrix, tfidf_matrix)

# Step 4: Build a reverse index of movie titles
indices = pd.Series(df.index, index=df['title'])

# Step 5: Recommendation function
def recommend_movies(title, num_recommendations=3):
    idx = indices[title]
    sim_scores = list(enumerate(cosine_sim[idx]))
    sim_scores = sorted(sim_scores, key=lambda x: x[1], reverse=True)
    sim_scores = sim_scores[1:num_recommendations+1]
    movie_indices = [i[0] for i in sim_scores]
    return df['title'].iloc[movie_indices]

# Example: Recommend movies similar to "Inception"
print("Movies similar to 'Inception':")
print(recommend_movies('Inception'))